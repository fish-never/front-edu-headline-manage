<template>
  <div  v-loading="loading">
    <div class="location">
      <span class="grey">社区管理</span>>内容审核
      <div class="show-pages">
          <span>显示文章（篇）</span>
          <el-select v-model="value" clearable size="small" filterable placeholder="20" style="width:80px;">
            <el-option
              v-for="item in options"
              :key="item"
              :label="item"
              :value="item">
            </el-option>
          </el-select>
        </div>
    </div>
    <div class="item-wrap" @click="checked(data.id)" :class="{selected: data.select == true}">
     <div class="item">
        <h2 class="title-p" style="font-size:24px; color:#333;line-height:25px;">{{data.title}}</h2>
        <p class="tag"><span>{{data.tag}}</span><span>{{data.source  + "  "}}</span><span>{{data.created_at}}</span></p>
        <div class="text" v-html="data.content"></div>
        <button class="pass">通过</button>
        <button class="delete">删除</button>
      </div>
    </div>
    <el-pagination
      class="page-wrap"
      @size-change="handleSizeChange"
      @current-change="handleCurrentChange"
      :current-page="page"
      :page-sizes="[10,50,100,200,500,1000,2000,3000]"
      :page-size="pageNum"
      layout="total, sizes, prev, pager, next, jumper"
      :total="total">
    </el-pagination>
  </div>
</template>

<script>
  import grabService from '../../service/grab';
  import commonService from '../../service/common';
  import previewService from '../../service/preview';
export default {
  name: 'preview',
  data () {
    return {
      loading: true,
      data:[],
      id:"5b1db30a62f531394f026242",
      pageShow:false,
      loading: true,
      select:false,
      itemData:[],
      page:1,
      ids:"",
      types:"",
      total: 10,
      pageNum: 10,
      options:[],
      value:"",

    }
  },
  created(){
   
  },
  mounted(){
     if (localStorage.getItem("account") == null) {
      this.$router.push({ path: "/" });
      return;
    }
    previewService.view(this.id).then(data=>{
      if(data.code==0){
      this.data = data.data;
      this.loading = false;
    }
    })

  },


    methods: {
    //弹框
     open(text) {
        this.$alert(text, '信息', {
          confirmButtonText: '确定',
        });
      },
      //点击编辑
      // markEdited
      mark(mark){
        mark =2;
      // console.log(mark)
        // return mark;
      
      },
     handleSelectionChange(val) {
      // console.log(val)
        this.multipleSelection = val;
        this.ids='';
        val.forEach(item=>{
               this.ids = item._id + "," + this.ids;
          })
          this.ids = this.ids.replace(/,$/,'')
           },
      getPage(num){
        this.page = num;
        this.loadList()
      },
      getPageNum(num){
        this.pageNum = num;
        this.loadList()
      },
      getSourceList(){
        this.page = 1;
        this.loadList()
      },
      loadList(){
        const params = {
          page:this.page,
          pageNum:this.pageNum,
          source:this.value,
          rangeType:this.value2,
          typeId:this.value3,
        };
       const loadingInstance = this.$loading({ fullscreen: true });
        grabService.list(params).then(data=>{
          if(data.code==0){
              loadingInstance.close();
          this.page = parseInt(data.data.page);
          this.pageNum = parseInt(data.data.pageNum);
          this.total = data.data.count;
          this.itemData = data.data.result;
       //   console.log(this.itemData)
          this.loading = false;
          this.pageShow=true;
        }else{
          this.open("加载失败，请重试！")
          this.pageShow=false;
          this.loading = false;
        }

      })
      },
     Detele(ids){
       const params = {
            ids: ids
        }
      // console.log(ids)
         this.$confirm('确定删除?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          grabService.detele(params).then(data=>{
            if(data.code==0){
            this.loadList()
            }else{
            this.open(data.msg)
            }

          })
        }
        )

      },
      //删除
      deleteLists(){
        console.log(this.ids)
        if(this.ids.length>0){
           const params = {
              ids:this.ids
           };
        this.$confirm('确定删除?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          grabService.detele(params).then(data=>{
            if(data.code==0){
            this.loadList()
            }else{
            this.open(data.msg)
            }

          })
        }).catch(() => {       
        });
        }else{
           this.open("请先对需要删除的数据进行勾选")
        }


    
      },
      handleSizeChange(val){
        this.pageNum = val;
        this.loadList();
      },
      handleCurrentChange(val){
        this.page = val;
        this.loadList();
      },

      handleEdit(item) {
      //  console.log(item);
      },
      handlePreview(item) {
      //  console.log(item);
      }
    }
  }
</script>

<style scoped lang="scss">
.item-wrap{
  height:310px;
  position: relative;
  background:rgba(255,255,255,1);
  margin:10px 30px;
  &:hover{
      border:1px solid #FD782D;
    }
}

  .item{
    padding:30px 25px;
  height:310px;
  overflow-y: auto;
  }
.pass,.delete{
  height:38px;
  width:76px;
  display: inline-block;
  position: absolute;
  color: #fff;
  right:0;
}
.pass{
  background: #FD782D;
  top:43px;
}
.delete{
  background: #344750;
  top:100px;
}
.show-pages{
  float:right;

}
  .link-a:visited{
  color:red;
}
a:visited{
  color:red;
}
.red{
  color:red;
}


  .opera{
    text-align: center;
    color:#96ABB5;
    font-size:14px;
    height:40px;

    border-top:1px solid #EDF1F2;
    position:absolute;
    bottom:0;
    width:100%;
    button{
      border:none;
      background:none;
      width:100%;
      cursor: pointer;
      color:#666;
      &:hover{
         color:#FD782D;
      }
    }
    a{
      display: block;
       &:hover{
         color:#FD782D;
      }
    }

  .el-col{
    height:39px;
    line-height:39px;
  }

  .border-c{
    border-left:1px solid #EDF1F2;
    border-right:1px solid #EDF1F2;
  }
  }

  .title{
    font-size:16px;
    color:rgba(52,71,80,1);
    line-height:22px;
    font-weight:600;
  }
  .tag{
    font-size:12px;
    color:rgba(179,179,179,0.99);
    line-height:12px;
    margin:16px 0;
  }
  .text{
    font-size:12px;
    color:rgba(102,102,102,1);
    line-height:20px;
    margin:0px 0 21px 0;
  }

</style>
